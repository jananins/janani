[{"C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\index.js":"1","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\login.js":"2","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\App.js":"3","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\signup.js":"4","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\funclick.js":"5"},{"size":263,"mtime":1609131315618,"results":"6","hashOfConfig":"7"},{"size":5052,"mtime":1609161116013,"results":"8","hashOfConfig":"7"},{"size":711,"mtime":1609086918854,"results":"9","hashOfConfig":"7"},{"size":5074,"mtime":1609161116557,"results":"10","hashOfConfig":"7"},{"size":0,"mtime":1608908199745,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ejn9jf",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\index.js",[],["25","26"],"C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\login.js",["27","28","29"],"C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\App.js",["30"],"import React from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nimport Login from './login.js';\r\nimport Signup from './signup.js';\r\nimport './index.css';\r\nexport default function APP(){\r\n\r\n    \r\n        return (\r\n            \r\n                        <Router >\r\n                            <Switch>\r\n                            <Route exact path=\"/\" component={  Login} />\r\n                                <Route path=\"/login\" component={Login} />\r\n                                <Route path=\"/signup\" component={Signup} />\r\n                               \r\n                            </Switch>\r\n                        </Router>\r\n                \r\n        );\r\n    }\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\signup.js",["31","32"],"import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport {Jumbotron,Button} from 'react-bootstrap';\r\n//import ReactDOM from 'react-dom';\r\nimport Login from './login.js';\r\nimport { Link } from 'react-router-dom';\r\nexport default class Signup extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          fields: {},\r\n          errors: {}\r\n        }\r\n  \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.submituserRegistrationForm = this.submituserRegistrationForm.bind(this);\r\n  \r\n      };\r\n  \r\n      handleChange(e) {\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n          fields\r\n        });\r\n     \r\n  \r\n      }\r\n  \r\n      submituserRegistrationForm(e) {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = {};\r\n         \r\n            fields[\"emailid\"] = \"\";\r\n           \r\n            fields[\"password\"] = \"\";\r\n            fields[\"number\"]=\"\";\r\n            this.setState({fields:fields});\r\n            this.props.register(fields);\r\n            alert(\"Form submitted\");\r\n        }\r\n  \r\n      }\r\n  \r\n      validateForm() {\r\n  \r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n  \r\n  \r\n       \r\n        if (!fields[\"emailid\"]) {\r\n          formIsValid = false;\r\n          errors[\"emailid\"] = \"*Please enter your email-ID.\";\r\n        }\r\n  \r\n        if (typeof fields[\"emailid\"] !== \"undefined\") {\r\n       \r\n          var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n          if (!pattern.test(fields[\"emailid\"])) {\r\n            formIsValid = false;\r\n            errors[\"emailid\"] = \"*Please enter valid email-ID.\";\r\n          }\r\n        }\r\n  \r\n  \r\n        if (!fields[\"password\"]) {\r\n          formIsValid = false;\r\n          errors[\"password\"] = \"*Please enter your password.\";\r\n        }\r\n  \r\n        if (typeof fields[\"password\"] !== \"undefined\") {\r\n          if (!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"*Please enter secure and strong password.\";\r\n          }\r\n        }\r\n\r\n        if (!fields[\"number\"]) {\r\n          formIsValid = false;\r\n          errors[\"password\"] = \"*Please enter your number.\";\r\n        }\r\n  \r\n        \r\n  \r\n  \r\n        this.setState({\r\n          errors: errors\r\n        });\r\n        return formIsValid;\r\n  \r\n  \r\n      }\r\n  \r\n    render() {\r\n        return (\r\n      <div class=\"signup-form\">\r\n                     \r\n                \r\n                \r\n        \r\n        \r\n                      <form onSubmit={this.submituserRegistrationForm}>\r\n                     <p text-align=\"right\"> member login</p> \r\n                \r\n                <div className=\"form-group\">\r\n                    \r\n                    <input type=\"email\" text-align=\"right\" className=\"form-control\"  name=\"emailid\" placeholder=\"Enter email\" value={this.state.fields.emailid} onChange={this.handleChange} />\r\n                    <div className=\"errorMsg\">{this.state.errors.emailid}</div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    \r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" name =\"password\" value={this.state.fields.password} onChange={this.handleChange} />\r\n                    <div className=\"errorMsg\">{this.state.errors.password}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    \r\n                    <input type=\"number\" className=\"form-control\" placeholder=\"Enter mobile\" name=\"number\" value={this.state.fields.password} onChange={this.handleChange}/>\r\n                    <div className=\"errorMsg\">{this.state.errors.number}</div>\r\n                </div>\r\n               \r\n\r\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">signin</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    already user <a href=\"login.js\">logiin</a>\r\n                </p>\r\n               \r\n                <p>\r\n                    <Link to=\"./reduxform\\src\\login.js\" component={Login}>Register</Link>\r\n                    \r\n                </p>\r\n            </form>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n//ReactDOM.render(<Signup/>,document.getElementById(\"root\"));\r\n\r\n/*const mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    fields: state.fields\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: fields => dispatch(loginaction.register(fields))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);*/","C:\\Users\\user\\Desktop\\myfirstreactapp\\newreduxform\\reduxform\\src\\funclick.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":4,"column":9,"nodeType":"39","messageId":"40","endLine":4,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":128,"column":28,"nodeType":"43","endLine":128,"endColumn":40},{"ruleId":"41","severity":1,"message":"42","line":131,"column":21,"nodeType":"43","endLine":131,"endColumn":33},{"ruleId":"37","severity":1,"message":"44","line":2,"column":33,"nodeType":"39","messageId":"40","endLine":2,"endColumn":41},{"ruleId":"37","severity":1,"message":"38","line":4,"column":9,"nodeType":"39","messageId":"40","endLine":4,"endColumn":18},{"ruleId":"37","severity":1,"message":"45","line":4,"column":19,"nodeType":"39","messageId":"40","endLine":4,"endColumn":25},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]